// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    ALU(x=regout, y[1..15]=false, y[0]=true, f=inc, out=aluout); 
    Mux16(a=aluout, b[0..15]=false, sel=reset, out=resetout);
    Mux8Way16(a=regout, b=aluout, c=in, d=in, e=resetout, f=resetout, g=resetout, h=resetout, sel[0]=inc, sel[1]=load, sel[2]=reset, out=eightwayout);
    Register(in=eightwayout, load=true, out=regout, out=out);

    //別解
    // Inc16(in=regout, out=incout);
    // Mux16(a=regout, b=incout, sel=inc, out=incornormal);
    // Mux4Way16(a=incornormal, b=in, c[0..15]=false, d[0..15]=false, sel[0]=load, sel[1]=reset, out=selectedout);
    // Register(in=selectedout, load=true, out=regout, out=out);
}